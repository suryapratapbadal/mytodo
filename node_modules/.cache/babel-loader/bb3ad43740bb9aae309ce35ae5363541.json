{"ast":null,"code":"var _jsxFileName = \"/Users/suryapratapbadal/Work/mytodo/src/App.tsx\";\nimport React, { useState } from 'react';\nimport InputTodo from \"./InputTodo\";\nimport './App.css';\nimport TodoList from \"./TodoList\";\n\nfunction App() {\n  const [list, setList] = useState({});\n\n  const updateList = (id, newData) => {\n    let newlist = { ...list,\n      id: newData\n    };\n    console.log(\"---\", newlist);\n    setList(newlist);\n  };\n\n  const updateListData = id => {\n    let temp = { ...list,\n      id: { ...list[id],\n        \"complete\": !list[id].complete\n      }\n    };\n    setList(temp);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"My TODO App\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputTodo, {\n    callback: updateList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, Object.keys(list).length > 0 && Object.values(list).map((item, i) => /*#__PURE__*/React.createElement(TodoList, {\n    todoItem: item,\n    key: i,\n    callback: updateListData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/suryapratapbadal/Work/mytodo/src/App.tsx"],"names":["React","useState","InputTodo","TodoList","App","list","setList","updateList","id","newData","newlist","console","log","updateListData","temp","complete","Object","keys","length","values","map","item","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAM,EAAN,CAAhC;;AAEA,QAAMM,UAAU,GAAG,CAACC,EAAD,EAAaC,OAAb,KAA8B;AAC/C,QAAIC,OAAO,GAAG,EACZ,GAAGL,IADS;AAEZG,MAAAA,EAAE,EAAEC;AAFQ,KAAd;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBF,OAAlB;AACAJ,IAAAA,OAAO,CAACI,OAAD,CAAP;AAED,GARD;;AAUA,QAAMG,cAAc,GAAIL,EAAD,IAAgB;AACrC,QAAIM,IAAI,GAAG,EACT,GAAGT,IADM;AAETG,MAAAA,EAAE,EAAE,EACF,GAAGH,IAAI,CAACG,EAAD,CADL;AAEF,oBAAY,CAACH,IAAI,CAACG,EAAD,CAAJ,CAASO;AAFpB;AAFK,KAAX;AAOAT,IAAAA,OAAO,CAACQ,IAAD,CAAP;AACD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEP,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKS,MAAM,CAACC,IAAP,CAAYZ,IAAZ,CAAD,CAAoBa,MAApB,GAA6B,CAA7B,IAAkCF,MAAM,CAACG,MAAP,CAAcd,IAAd,EAAoBe,GAApB,CAAwB,CAACC,IAAD,EAAYC,CAAZ,kBACxD,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAED,IAApB;AAA0B,IAAA,GAAG,EAAEC,CAA/B;AAAkC,IAAA,QAAQ,EAAET,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgC,CAFtC,CADF,CAPF,CADF;AAqBD;;AAED,eAAeT,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport InputTodo from \"./InputTodo\";\nimport './App.css';\nimport TodoList from \"./TodoList\";\n\nfunction App() {\n\n  const [list, setList] = useState<any>({});\n\n  const updateList = (id: string, newData: any) => {\n    let newlist = {\n      ...list,\n      id: newData\n    };\n    console.log(\"---\",newlist)\n    setList(newlist);\n\n  }\n\n  const updateListData = (id: string) => {\n    let temp = {\n      ...list,\n      id: {\n        ...list[id],\n        \"complete\": !list[id].complete\n      }\n    }\n    setList(temp);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        My TODO App\n      </header>\n      <div>\n        <InputTodo callback={updateList} />\n      </div>\n      <div>\n        <ul>\n          {\n            (Object.keys(list)).length > 0 && Object.values(list).map((item: any, i: number) =>\n              <TodoList todoItem={item} key={i} callback={updateListData} />\n            )\n          }\n\n        </ul>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}