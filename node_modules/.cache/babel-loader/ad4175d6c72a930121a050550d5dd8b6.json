{"ast":null,"code":"var _jsxFileName = \"/Users/suryapratapbadal/Work/mytodo/src/TodoList.tsx\";\nimport React, { Fragment, useState } from \"react\";\nconst TodoList = React.memo(props => {\n  const {\n    todoItem\n  } = props;\n  const [checked, setChecked] = useState(false);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    style: {\n      textDecoration: checked ? \"line-through\" : \"none\"\n    },\n    onClick: () => setChecked(!checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, todoItem.name));\n});\nexport default TodoList;","map":{"version":3,"sources":["/Users/suryapratapbadal/Work/mytodo/src/TodoList.tsx"],"names":["React","Fragment","useState","TodoList","memo","props","todoItem","checked","setChecked","textDecoration","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAAqD,OAArD;AAOA,MAAMC,QAAyB,GAAGH,KAAK,CAACI,IAAN,CAAWC,KAAK,IAAI;AAElD,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AAEA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAU,KAAV,CAAtC;AAIA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAE;AAAEO,MAAAA,cAAc,EAAEF,OAAO,GAAG,cAAH,GAAoB;AAA7C,KAAX;AAAkE,IAAA,OAAO,EAAE,MAAMC,UAAU,CAAC,CAACD,OAAF,CAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwGD,QAAQ,CAACI,IAAjH,CADJ,CADJ;AAKH,CAbiC,CAAlC;AAeA,eAAeP,QAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { checkServerIdentity } from \"tls\";\n\ntype props = {\n    todoItem: any\n}\n\nconst TodoList: React.FC<props> = React.memo(props => {\n\n    const { todoItem } = props;\n\n    const [checked, setChecked] = useState<boolean>(false);\n\n\n\n    return (\n        <Fragment>\n            <li style={{ textDecoration: checked ? \"line-through\" : \"none\" }} onClick={() => setChecked(!checked)}>{todoItem.name}</li>\n        </Fragment >\n    )\n})\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}