{"ast":null,"code":"var _jsxFileName = \"/Users/suryapratapbadal/Work/mytodo/src/TodoList.tsx\";\nimport React, { Fragment } from \"react\";\nconst TodoList = React.memo(props => {\n  const {\n    todoItem,\n    callback\n  } = props; // const [checked, setChecked] = useState<boolean>(false);\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    style: {\n      textDecoration: todoItem.complete ? \"line-through\" : \"none\",\n      cursor: \"pointer\"\n    },\n    onClick: () => callback(todoItem.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, todoItem.name));\n});\nexport default TodoList;","map":{"version":3,"sources":["/Users/suryapratapbadal/Work/mytodo/src/TodoList.tsx"],"names":["React","Fragment","TodoList","memo","props","todoItem","callback","textDecoration","complete","cursor","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAqD,OAArD;AAQA,MAAMC,QAAyB,GAAGF,KAAK,CAACG,IAAN,CAAWC,KAAK,IAAI;AAElD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBF,KAA/B,CAFkD,CAIlD;;AAIA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAE;AAAEG,MAAAA,cAAc,EAAEF,QAAQ,CAACG,QAAT,GAAoB,cAApB,GAAqC,MAAvD;AAA+DC,MAAAA,MAAM,EAAE;AAAvE,KAAX;AAA+F,IAAA,OAAO,EAAE,MAAMH,QAAQ,CAACD,QAAQ,CAACK,EAAV,CAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsIL,QAAQ,CAACM,IAA/I,CADJ,CADJ;AAKH,CAbiC,CAAlC;AAeA,eAAeT,QAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { checkServerIdentity } from \"tls\";\n\ntype props = {\n    todoItem: any,\n    callback: any\n}\n\nconst TodoList: React.FC<props> = React.memo(props => {\n\n    const { todoItem, callback } = props;\n\n    // const [checked, setChecked] = useState<boolean>(false);\n\n\n\n    return (\n        <Fragment>\n            <li style={{ textDecoration: todoItem.complete ? \"line-through\" : \"none\", cursor: \"pointer\" }} onClick={() => callback(todoItem.id)}>{todoItem.name}</li>\n        </Fragment >\n    )\n})\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}